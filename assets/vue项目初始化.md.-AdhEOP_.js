import{_ as s,c as a,o as e,a1 as i}from"./chunks/framework.B4og09lg.js";const t="/vue-init/assets/image.DuJqHP8p.png",g=JSON.parse('{"title":"vue项目初始化","description":"","frontmatter":{"title":"vue项目初始化"},"headers":[],"relativePath":"vue项目初始化.md","filePath":"vue项目初始化.md"}'),n={name:"vue项目初始化.md"},r=i(`<p>基于 vite 搭建 vue3 + typescript + vue-router + pinia 的基础项目</p><h1 id="前提" tabindex="-1">前提 <a class="header-anchor" href="#前提" aria-label="Permalink to &quot;前提&quot;">​</a></h1><ul><li><strong>nodejs</strong><br> 熟悉命令行 ，已安装 18.3 或更高版本的 Node.js<br><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noreferrer">Node.js 官网</a><br><a href="https://www.cnblogs.com/matanzhang/p/11441693.html" target="_blank" rel="noreferrer">Node.js 安装教程</a></li></ul><h1 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 pnpm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 yarn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span></span></code></pre></div><p><img src="`+t+'" alt="alt text"> Typescript:<br> Vue Router: 官方的路由库。<br> Pinia: 官方的状态管理库。<br> Eslint: 静态代码分析工具，管理代码规范。(初学可以不使用)<br> Prettier: 代码格式化工具。(初学可以不使用)</p><h1 id="项目运行" tabindex="-1">项目运行 <a class="header-anchor" href="#项目运行" aria-label="Permalink to &quot;项目运行&quot;">​</a></h1><ol><li>安装依赖</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><ol start="2"><li>启动项目</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h1 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h1><p>├── node_modules 依赖包<br> ├── README.md 项目描述<br> ├── public 公共资源<br> ├── vite.config.ts vite 配置文件<br> ├── package.json 依赖包信息<br> ├── index.html 入口文件<br> ├── src 源代码<br> │ ├── App.vue 根组件<br> │ ├── main.ts 项目入口文件<br> │ ├── router 路由<br> │ │ ├── index.ts 路由配置文件<br> │ ├── stores 状态管理<br> │ │ ├── index.ts 状态管理配置文件<br> │ ├── views | pages 页面<br> │ │ └── Home.vue 首页<br> │ ├── layout 布局<br> │ │ └── index.vue 布局组件<br> │ │ └── components 组件<br> │ ├── types 类型声明<br> │ │ └── index.d.ts 全局类型声明文件<br> │ ├── utils 工具函数<br> │ │ └── index.ts<br> │ ├── styles 样式<br> │ │ ├── index.css 全局样式<br> │ ├── config 配置文件<br> │ │ └── index.ts<br> │ ├── api | interfaces 接口<br> │ ├── assets 静态资源<br> │ │ └── logo.png<br> │ ├── components 组件<br> │ │ ├── HelloWorld.vue<br> │</p>',13),l=[r];function p(h,o,d,c,b,k){return e(),a("div",null,l)}const m=s(n,[["render",p]]);export{g as __pageData,m as default};
